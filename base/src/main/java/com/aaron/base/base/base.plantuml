@startuml

title __BASE's Class Diagram__\n

  namespace com.aaron.base {
    namespace base {
      class com.aaron.base.base.ActivityCollector {
          {static} - sActivities : List<Activity>
          {static} + addActivity()
          {static} + finishAll()
          {static} + getBottom()
          {static} + getCount()
          {static} + getTop()
          {static} + removeActivity()
          - ActivityCollector()
      }
    }
  }
  

  namespace com.aaron.base {
    namespace base {
      abstract class com.aaron.base.base.BaseActivity {
          - mForbidScaleTextSize : boolean
          + forbidScaleTextSize()
          + getResources()
          + onConfigurationChanged()
      }
    }
  }
  

  namespace com.aaron.base {
    namespace base {
      abstract class com.aaron.base.base.BaseApp {
          {static} - sContext : Context
          {static} + getContext()
          {abstract} + initModuleApp()
          {abstract} + initModuleData()
          + onCreate()
      }
    }
  }
  

  namespace com.aaron.base {
    namespace base {
      abstract class com.aaron.base.base.BaseFragment {
          # mChildFragmentManager : FragmentManager
          # mFragmentManager : FragmentManager
          {static} - sEnter : int
          {static} - sExit : int
          {static} - sPopEnter : int
          {static} - sPopExit : int
          + BaseFragment()
          {static} + addFragment()
          {static} + addFragment()
          + lazyLoad()
          + onActivityCreated()
          + onAttach()
          + onTouch()
          + onViewCreated()
          {static} + popFragment()
          {static} + replaceFragment()
          + setTransitionAnim()
          + setUserVisibleHint()
          + startActivity()
      }
    }
  }
  

  namespace com.aaron.base {
    namespace base {
      interface com.aaron.base.base.IBaseActivity {
          {abstract} + forbidScaleTextSize()
      }
    }
  }
  

  namespace com.aaron.base {
    namespace base {
      interface com.aaron.base.base.IBaseFragment {
          {abstract} + lazyLoad()
          {abstract} + setTransitionAnim()
      }
    }
  }
  

  namespace com.aaron.base {
    namespace base {
      interface com.aaron.base.base.IContract {
      }
    }
  }
  

  namespace com.aaron.base {
    namespace base {
      interface com.aaron.base.base.IContract.M {
      }
    }
  }
  

  namespace com.aaron.base {
    namespace base {
      abstract class com.aaron.base.base.IContract.P {
          + P()
          {abstract} + createM()
          {abstract} + detach()
      }
    }
  }
  

  namespace com.aaron.base {
    namespace base {
      interface com.aaron.base.base.IContract.V {
          {abstract} + attachP()
      }
    }
  }
  

  com.aaron.base.base.BaseActivity .up.|> com.aaron.base.base.IBaseActivity
  com.aaron.base.base.BaseActivity -up-|> androidx.appcompat.app.AppCompatActivity
  com.aaron.base.base.BaseApp -up-|> android.app.Application
  com.aaron.base.base.BaseFragment .up.|> android.view.View.OnTouchListener
  com.aaron.base.base.BaseFragment .up.|> com.aaron.base.base.IBaseFragment
  com.aaron.base.base.BaseFragment -up-|> androidx.fragment.app.Fragment
  com.aaron.base.base.BaseFragment o-- com.aaron.base.base.BaseActivity : mActivity
  com.aaron.base.base.IContract +-down- com.aaron.base.base.IContract.M
  com.aaron.base.base.IContract +-down- com.aaron.base.base.IContract.P
  com.aaron.base.base.IContract +-down- com.aaron.base.base.IContract.V
  com.aaron.base.base.IContract.P o-- M : mM
  com.aaron.base.base.IContract.P o-- V : mV


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
